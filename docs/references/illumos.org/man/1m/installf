   INSTALLF(1M) Maintenance Commands INSTALLF(1M)

NAME

   installf - add a file to the software installation database

SYNOPSIS

   installf [-c class] [ [-M] -R root_path] [-V fs_file] pkginst pathname
   [ftype [major minor] [mode owner group]]
   installf [-c class] [ [-M] -R root_path] [-V fs_file] pkginst -
   installf -f [-c class] [ [-M] -R root_path] [-V fs_file] pkginst

DESCRIPTION

   installf informs the system that a pathname not listed in the
   [1]pkgmap(4)
   file is being created or modified. It should be invoked before any file
   modifications have occurred.
   When the second synopsis is used, the pathname descriptions will be
   read
   from standard input. These descriptions are the same as would be given
   in
   the first synopsis but the information is given in the form of a list.
   The descriptions should be in the form:
   pathname [ ftype [ major minor ] [ mode owner group ]]
   After all files have been appropriately created and/or modified,
   installf
   should be invoked with the -f synopsis to indicate that installation is
   final. Links will be created at this time and, if attribute information
   for a pathname was not specified during the original invocation of
   installf, or was not already stored on the system, the current
   attribute
   values for the pathname will be stored. Otherwise, installf verifies
   that
   attribute values match those given on the command line, making
   corrections as necessary. In all cases, the current content information
   is calculated and stored appropriately.
   Package commands are [2]largefile(5)-aware. They handle files larger
   than 2
   GB in the same way they handle smaller files. In their current
   implementations, [3]pkgadd(1M), [4]pkgtrans(1) and other package
   commands can
   process a datastream of up to 4 GB.

OPTIONS

   -c class
   Class to which installed objects should be associated.
   Default class is none.
   -f
   Indicates that installation is complete. This option is
   used with the final invocation of installf (for all files
   of a given class).
   -M
   Instruct installf not to use the $root_path/etc/vfstab
   file for determining the client's mount points. This
   option assumes the mount points are correct on the server
   and it behaves consistently with Solaris 2.5 and earlier
   releases.
   -R root_path
   Define the full path name of a directory to use as the
   root_path. All files, including package system
   information files, are relocated to a directory tree
   starting in the specified root_path. The root_path can be
   specified when installing to a client from a server (for
   example, /export/root/client1).
   installf inherits the value of the PKG_INSTALL_ROOT
   environment variable. (See ENVIRONMENT VARIABLES, below.)
   If PKG_INSTALL_ROOT is set, such as when the -R option is
   used with [5]pkgadd(1M) or [6]pkgrm(1M), there is no need to
   use the installf -R option.
   Note -
   The root file system of any non-global zones must not
   be referenced with the -R option. Doing so might damage
   the global zone's file system, might compromise the
   security of the global zone, and might damage the non-
   global zone's file system. See [7]zones(5).
   -V fs_file
   Specify an alternative fs_file to map the client's file
   systems. For example, used in situations where the
   $root_path/etc/vfstab file is non-existent or unreliable.

OPERANDS

   pkginst
   Name of package instance with which the pathname should be
   associated.
   pathname
   Pathname that is being created or modified.
   ftype
   A one-character field that indicates the file type. Possible
   file types include:
   b
   block special device
   c
   character special device
   d
   directory
   e
   a file to be edited upon installation or removal
   f
   a standard executable or data file
   l
   linked file
   p
   named pipe
   s
   symbolic link
   v
   volatile file (one whose contents are expected to
   change)
   x
   an exclusive directory
   major
   The major device number. The field is only specified for
   block or character special devices.
   minor
   The minor device number. The field is only specified for
   block or character special devices.
   mode
   The octal mode of the file (for example, 0664). A question
   mark (?) indicates that the mode will be left unchanged,
   implying that the file already exists on the target machine.
   This field is not used for linked or symbolically linked
   files.
   owner
   The owner of the file (for example, bin or root). The field
   is limited to 14 characters in length. A question mark (?)
   indicates that the owner will be left unchanged, implying
   that the file already exists on the target machine. This
   field is not used for linked or symbolically linked files.
   group
   The group to which the file belongs (for example, bin or
   sys). The field is limited to 14 characters in length. A
   question mark (?) indicates that the group will be left
   unchanged, implying that the file already exists on the
   target machine. This field is not used for linked or
   symbolically linked files.

EXAMPLES

Example 1: Basic Usage

   The following example shows the use of installf, invoked from an
   optional
   pre-install or post-install script:
   # create /dev/xt directory
   # (needs to be done before drvinstall)
   installf $PKGINST /dev/xt d 755 root sys ||
   exit 2
   majno=`/usr/sbin/drvinstall -m /etc/master.d/xt
   -d $BASEDIR/data/xt.o -v1.0` ||
   exit 2
   i=00
   while [ $i -lt $limit ]
   do
   for j in 0 1 2 3 4 5 6 7
   do
   echo /dev/xt$i$j c $majno `expr $i ? 8 + $j`
   644 root sys |
   echo /dev/xt$i$j=/dev/xt/$i$j
   done
   i=`expr $i + 1`
   [ $i -le 9 ] && i="0$i" #add leading zero
   done | installf $PKGINST - || exit 2
   # finalized installation, create links
   installf -f $PKGINST || exit 2

ENVIRONMENT VARIABLES

   installf inherits the value of the following environment variable. This
   variable is set when [8]pkgadd(1M) or [9]pkgrm(1M) is invoked with the
   -R
   option.
   PKG_INSTALL_ROOT
   If present, defines the full path name of a directory
   to use as the system's PKG_INSTALL_ROOT path. All
   product and package information files are then looked
   for in the directory tree, starting with the
   specified PKG_INSTALL_ROOT path. If not present, the
   default system path of / is used.

EXIT STATUS

   0
   Successful operation.
   >0
   An error occurred.

SEE ALSO

   [10]pkginfo(1), [11]pkgmk(1), [12]pkgparam(1), [13]pkgproto(1),
   [14]pkgtrans(1), [15]pkgadd(1M),
   [16]pkgask(1M), [17]pkgchk(1M), [18]pkgrm(1M), [19]removef(1M),
   [20]pkgmap(4), [21]space(4),
   [22]attributes(5), [23]largefile(5)

NOTES

   When ftype is specified, all applicable fields, as shown below, must be
   defined:
   +------------------------------------------------------+
   |ftype Required Fields |
   |p, x, d, f, v, or e mode owner group |
   |c or b major minor mode owner group |
   +------------------------------------------------------+
   The installf command will create directories, named pipes and special
   devices on the original invocation. Links are created when installf is
   invoked with the -f option to indicate installation is complete.
   Links should be specified as path1=path2. path1 indicates the
   destination
   and path2 indicates the source file.
   Files installed with installf will be placed in the class none, unless
   a
   class is defined with the command. Subsequently, they will be removed
   when the associated package is deleted. If this file should not be
   deleted at the same time as the package, be certain to assign it to a
   class which is ignored at removal time. If special action is required
   for
   the file before removal, a class must be defined with the command and
   an
   appropriate class action script delivered with the package.
   When classes are used, installf must be used in one of the following
   forms:
   installf -c class1 ...
   installf -f -c class1 ...
   installf -c class2 ...
   installf -f -c class2 ...
   October 30, 2007 [24]INSTALLF(1M)

References

   Visible links:
   1. https://illumos.org/man/4/pkgmap
   2. https://illumos.org/man/5/largefile
   3. https://illumos.org/man/1M/pkgadd
   4. https://illumos.org/man/1/pkgtrans
   5. https://illumos.org/man/1M/pkgadd
   6. https://illumos.org/man/1M/pkgrm
   7. https://illumos.org/man/5/zones
   8. https://illumos.org/man/1M/pkgadd
   9. https://illumos.org/man/1M/pkgrm
  10. https://illumos.org/man/1/pkginfo
  11. https://illumos.org/man/1/pkgmk
  12. https://illumos.org/man/1/pkgparam
  13. https://illumos.org/man/1/pkgproto
  14. https://illumos.org/man/1/pkgtrans
  15. https://illumos.org/man/1M/pkgadd
  16. https://illumos.org/man/1M/pkgask
  17. https://illumos.org/man/1M/pkgchk
  18. https://illumos.org/man/1M/pkgrm
  19. https://illumos.org/man/1M/removef
  20. https://illumos.org/man/4/pkgmap
  21. https://illumos.org/man/4/space
  22. https://illumos.org/man/5/attributes
  23. https://illumos.org/man/5/largefile
  24. https://illumos.org/man/1M/INSTALLF

   Hidden links:
  26. https://illumos.org/man/4/pkgmap
  27. https://illumos.org/man/5/largefile
  28. https://illumos.org/man/1M/pkgadd
  29. https://illumos.org/man/1/pkgtrans
  30. https://illumos.org/man/1M/pkgadd
  31. https://illumos.org/man/1M/pkgrm
  32. https://illumos.org/man/5/zones
  33. https://illumos.org/man/1M/pkgadd
  34. https://illumos.org/man/1M/pkgrm
  35. https://illumos.org/man/1/pkginfo
  36. https://illumos.org/man/1/pkgmk
  37. https://illumos.org/man/1/pkgparam
  38. https://illumos.org/man/1/pkgproto
  39. https://illumos.org/man/1/pkgtrans
  40. https://illumos.org/man/1M/pkgadd
  41. https://illumos.org/man/1M/pkgask
  42. https://illumos.org/man/1M/pkgchk
  43. https://illumos.org/man/1M/pkgrm
  44. https://illumos.org/man/1M/removef
  45. https://illumos.org/man/4/pkgmap
  46. https://illumos.org/man/4/space
  47. https://illumos.org/man/5/attributes
  48. https://illumos.org/man/5/largefile
